{"version":3,"sources":["components/Meme.js","components/MemeBody.js","components/SideBar.js","components/InputBox.js","components/Head.js","components/Main.js","App.js","index.js"],"names":["Meme","props","state","className","src","this","url","height","width","Component","MemeBody","name","SideBar","h","w","onClick","handleSideClick","meme","img","InputBox","type","onChange","handleInput","num","value","Head","Main","memeArray","length","loaded","heightRatio","widthRatio","one","two","three","four","textSize","five","showSideBar","setState","i","x","Math","floor","random","rH","rW","event","target","console","log","a","fetch","res","json","datas","data","memes","domtoimage","toBlob","document","getElementById","then","blob","window","saveAs","showSide","style","padding","display","map","id","bounds","top","left","fontSize","box_count","setFont","handleClick","randomClick","downloadIMG","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3d79ba0c.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport Draggable from 'react-draggable'; // The default\r\nimport {DraggableCore} from 'react-draggable'; // <DraggableCore>\r\nexport class Meme extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"meme\">\r\n                    <img src={this.props.url} height={this.props.height} width={this.props.width}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Meme\r\n","import React, { Component } from 'react';\r\nimport Meme from './Meme.js'\r\nexport class MemeBody extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n        }\r\n    }\r\n    // async componentDidMount(){\r\n    //     const res= await fetch(\"https://api.imgflip.com/get_memes\");\r\n    //     const datas= await res.json();\r\n    //     this.setState({memeArray:datas.data.memes , loaded:true,length:datas.data.memes.length});\r\n    // }\r\n    // handleClick(){\r\n    //     var x= this.state.num;\r\n    //     x=x+1;\r\n    //     if(x===this.state.length){\r\n    //         x=0;\r\n    //     }\r\n    //     this.setState({num:x});\r\n    //     var h= this.state.memeArray[x].height;\r\n    //     var w= this.state.memeArray[x].width;\r\n    //     var rH= (h/(h+w));\r\n    //     var rW=(w/(h+w));\r\n    //     this.setState({heightRatio:rH , widthRatio:rW});\r\n    //     console.log(rH , \" \"  , rW);\r\n    // }\r\n    render() {\r\n       return (\r\n            <div>\r\n                   <div >\r\n                        <Meme name={this.props.name} url={this.props.url}\r\n                        height={this.props.height} width={this.props.height}/>\r\n                       \r\n                    </div>\r\n                \r\n            </div>\r\n        )\r\n    \r\n    }\r\n}\r\n\r\nexport default MemeBody\r\n","import React, { Component } from 'react'\r\n\r\nexport class SideBar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            h:(this.props.height/(this.props.height+this.props.width)) * 200,\r\n            w:(this.props.width/(this.props.height+this.props.width)) *200,\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <button onClick={this.props.handleSideClick} className=\"sidebar-btn\">\r\n               <span> {this.props.meme}</span>  <img src={this.props.img} height={this.state.h} width={this.state.w}/>\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SideBar\r\n","import React, { Component } from 'react'\r\n\r\nexport class InputBox extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n\r\n        }\r\n    }\r\n    render() {\r\n        // if(this.props.num===2){\r\n        //     return (\r\n        //         <div>\r\n        //             <input type=\"text\" onChange={this.props.handleInput}></input>\r\n        //         </div>\r\n        //     )\r\n        // }\r\n        return (\r\n            <div>\r\n            <textarea type=\"text\" onChange={this.props.handleInput} className=\"input-box\" className={this.props.num} placeholder=\"#text\" value={this.props.value}/>\r\n            </div>\r\n        )\r\n                // if(this.props.num===1){\r\n                //     return (<div>\r\n                //     <input type=\"text\" onChange={this.props.handleInput}></input>\r\n                //     </div> )\r\n                // }else if(this.props.num===2){\r\n                //    return ( <div>\r\n                        \r\n                //     <input type=\"text\" onChange={this.props.handleInput}></input>\r\n                    \r\n                //     <input type=\"text\" onChange={this.props.handleInput}></input>\r\n                //    </div> )\r\n                // }else if(this.props.num===3){\r\n                //     return (<div>\r\n                //     <input type=\"text\" onChange={this.props.handleInput}></input>\r\n                    \r\n                //     <input type=\"text\" onChange={this.props.handleInput}></input>\r\n                    \r\n                //     <input type=\"text\" onChange={this.props.handleInput}></input>\r\n                //     </div>)\r\n                // }else if(this.props.num===4){\r\n                //     return (<div>\r\n                //     <input type=\"text\" onChange={this.props.handleInput}></input>\r\n                    \r\n                //     <input type=\"text\" onChange={this.props.handleInput}></input>\r\n                    \r\n                //     <input type=\"text\" onChange={this.props.handleInput}></input>\r\n                //     <input type=\"text\" onChange={this.props.handleInput}></input>\r\n                //     </div> ) \r\n                // }else if(this.props.num===5){\r\n                //     return <div> <input type=\"text\" onChange={this.props.handleInput}></input>\r\n                    \r\n                //     <input type=\"text\" onChange={this.props.handleInput}></input>\r\n                    \r\n                //     <input type=\"text\" onChange={this.props.handleInput}></input>\r\n                //     <input type=\"text\" onChange={this.props.handleInput}></input>\r\n                //     <input type=\"text\" onChange={this.props.handleInput}></input>\r\n                //      </div>\r\n                // }\r\n        \r\n    }\r\n}\r\n\r\nexport default InputBox\r\n","\r\nimport React, { Component } from 'react'\r\n\r\nexport class Head extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n                <h1>Meme <span>G</span>enerator!</h1>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Head\r\n","import React, { Component } from 'react'\r\nimport MemeBody from './MemeBody.js'\r\nimport SideBar from './SideBar.js'\r\nimport Draggable from 'react-draggable'; // The default\r\nimport {DraggableCore} from 'react-draggable'; // <DraggableCore>\r\nimport InputBox from './InputBox'\r\nimport Head from './Head'\r\nimport { saveAs } from 'file-saver';\r\nimport domtoimage from 'dom-to-image';\r\nexport class Main extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            memeArray:[],\r\n            length:0,\r\n            loaded:false,\r\n            num:-1,\r\n            heightRatio:0.00,\r\n            widthRatio:0.0,\r\n           // length:0\r\n           one:\"\",\r\n           two:\"\",\r\n           three:\"\",\r\n           four:\"\",\r\n           textSize:20,\r\n           five:\"\",\r\n           showSideBar:false,\r\n\r\n        }\r\n    }\r\n    showSide(){\r\n        this.setState({showSideBar:!this.state.showSideBar});\r\n    }\r\n    setFont(i){\r\n        this.setState({textSize:i});\r\n    }\r\n    randomClick(){\r\n        var x=Math.floor(Math.random() * (this.state.length + 1) ) + 0;\r\n        this.setState({num:x});\r\n        var h= this.state.memeArray[x].height;\r\n        var w= this.state.memeArray[x].width;\r\n        var rH= (h/(h+w));\r\n        var rW=(w/(h+w));\r\n        this.setState({heightRatio:rH , widthRatio:rW,num:x,one:\"\",two:\"\",three:\"\",four:\"\",five:\"\"})\r\n    }\r\n    handleInput(event,i){\r\n        var x= event.target.value;\r\n        if(i===1){\r\n            this.setState({one:x});\r\n        }if(i===2){\r\n            this.setState({two:x});\r\n        }if(i===3){\r\n            this.setState({three:x});\r\n        }if(i===4){\r\n            this.setState({four:x});\r\n        }if(i===5){\r\n            this.setState({five:x});\r\n        }\r\n    }\r\n    \r\n    handleClick(){\r\n        var x= this.state.num;\r\n        x=x+1;\r\n        if(x===this.state.length){\r\n            x=0;\r\n        }\r\n        this.setState({num:x});\r\n        var h= this.state.memeArray[x].height;\r\n        var w= this.state.memeArray[x].width;\r\n        var rH= (h/(h+w));\r\n        var rW=(w/(h+w));\r\n        this.setState({heightRatio:rH , widthRatio:rW,one:\"\",two:\"\",three:\"\",four:\"\",five:\"\"});\r\n        console.log(rH , \" \"  , rW);\r\n    }\r\n    async componentDidMount(){\r\n        const res= await fetch(\"https://api.imgflip.com/get_memes\");\r\n        const datas= await res.json();\r\n        this.setState({memeArray:datas.data.memes ,  loaded:true,  length:datas.data.memes.length});\r\n    }\r\n    handleSideClick(x){\r\n        this.setState({num:x});\r\n        var h= this.state.memeArray[x].height;\r\n        var w= this.state.memeArray[x].width;\r\n        var rH= (h/(h+w));\r\n        var rW=(w/(h+w));\r\n        this.setState({heightRatio:rH , widthRatio:rW,num:x,one:\"\",two:\"\",three:\"\",four:\"\",five:\"\"})\r\n    }\r\n    downloadIMG(){\r\n        domtoimage.toBlob(document.getElementById('memes'))\r\n        .then(function (blob) {\r\n        window.saveAs(blob, 'meme.png');\r\n    });\r\n    }\r\n    render() {\r\n        if(this.state.loaded===false){\r\n            return <div>Loading...</div>\r\n        }else{\r\n        return (\r\n            \r\n            \r\n            ( this.state.num >=0?\r\n            <div>\r\n                \r\n            <Head />\r\n            \r\n            <button onClick={()=>{this.showSide()}} style={{padding:5,}} className=\"menu next-btn\" >{this.state.showSideBar ? \"hide\" : \"more\"}</button>\r\n            {this.state.showSideBar? <div className=\"side-bar\" style={{display:this.state.showSideBar}}>\r\n                {\r\n                    this.state.memeArray.map((meme , id) => {\r\n                        return  <SideBar meme={meme.name} handleSideClick={()=>this.handleSideClick(id) } img={meme.url} height={meme.height} width={meme.width}/>\r\n                    })\r\n                }\r\n                </div>\r\n                : null\r\n           }\r\n            <div className=\"container\">\r\n           \r\n            <div className=\"meme-body\" id=\"memes\">\r\n            \r\n                <MemeBody  name={this.state.memeArray[this.state.num].name} url={this.state.memeArray[this.state.num].url}\r\n                        height={800* this.state.heightRatio} width={800 * this.state.widthRatio} /> \r\n                <Draggable bounds=\"parent\">\r\n                <div className=\"meme-input\" style={{top:10,left:10 ,fontSize:this.state.textSize}} >{this.state.one}</div>\r\n                </Draggable>\r\n                <Draggable bounds=\"parent\">\r\n                <div className=\"meme-input\" style={{top:50,left:10,fontSize:this.state.textSize}}>{this.state.two}</div>\r\n                </Draggable>\r\n                <Draggable bounds=\"parent\">\r\n                <div className=\"meme-input\" style={{top:100,left:10,fontSize:this.state.textSize}}>{this.state.three}</div>\r\n                </Draggable>\r\n                <Draggable bounds=\"parent\">\r\n                <div className=\"meme-input\" style={{top:150,left:10,fontSize:this.state.textSize}}>{this.state.four}</div>\r\n                </Draggable>\r\n                <Draggable bounds=\"parent\">\r\n                <div className=\"meme-input\" style={{top:200,left:10,fontSize:this.state.textSize}}>{this.state.five}</div>\r\n                </Draggable>\r\n            </div>\r\n            <div className=\"btn-input-grid\">\r\n            <div className=\"input-body\">\r\n            {\r\n                    this.state.memeArray[this.state.num].box_count >=1?<InputBox num={this.state.memeArray[this.state.num].box_count} handleInput={(event)=>this.handleInput(event ,1) } value={this.state.one} />:null\r\n                }\r\n                {\r\n                    this.state.memeArray[this.state.num].box_count >=2?<InputBox num={this.state.memeArray[this.state.num].box_count} handleInput={(event)=>this.handleInput(event,2)} value={this.state.two}/>:null\r\n                }\r\n                {\r\n                    this.state.memeArray[this.state.num].box_count >=3?<InputBox num={this.state.memeArray[this.state.num].box_count} handleInput={(event)=>this.handleInput(event,3)} value={this.state.three}/>:null\r\n                }\r\n                {\r\n                    this.state.memeArray[this.state.num].box_count >=4?<InputBox num={this.state.memeArray[this.state.num].box_count} handleInput={(event)=>this.handleInput(event,4)} value={this.state.four}/>:null\r\n                }\r\n                {\r\n                    this.state.memeArray[this.state.num].box_count >=5?<InputBox num={this.state.memeArray[this.state.num].box_count} handleInput={(event)=>this.handleInput(event,5)} value={this.state.five}/>:null\r\n                }\r\n            </div>\r\n            <div>\r\n            <button className=\"next-btn-s\" onClick={()=>this.setFont(20)}>S</button>\r\n            <button className=\"next-btn-s\" onClick={()=>this.setFont(30)}>M</button>\r\n            <button className=\"next-btn-s\" onClick={()=>this.setFont(50)}><span>L</span></button>\r\n            </div>\r\n            <div>\r\n            <button onClick={()=>this.handleClick()} className=\"next-btn\"><span>N</span>ext </button>\r\n            <button onClick={()=>this.randomClick()} className=\"next-btn\" > <span>R</span>andom </button>\r\n            <button onClick={()=>this.downloadIMG()} className=\"next-btn\" > <span>D</span>ownload </button>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            :\r\n            <div>\r\n            \r\n            <Head />\r\n\r\n            <button onClick={()=>this.randomClick()} className=\"next-btn-1\">  Find a <span>m</span>eme! </button>\r\n            </div>\r\n                \r\n            )\r\n        \r\n        )\r\n\r\n    }\r\n    }\r\n}\r\n\r\nexport default Main\r\n","\nimport './App.css';\nimport Main from './components/Main.js'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}